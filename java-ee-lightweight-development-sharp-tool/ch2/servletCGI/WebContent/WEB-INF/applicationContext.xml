<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"  
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/tx  
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd  
	http://www.springframework.org/schema/aop  
	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
    http://www.springframework.org/schema/cache
    http://www.springframework.org/schema/cache/spring-cache-3.2.xsd
    http://www.springframework.org/schema/mvc  
    http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
        ">    
    
	
<mvc:interceptors>  
    <!-- 使用 bean声明定义一个Interceptor，但是如果是直接定义在 mvc:interceptors 下面的 Interceptor将会拦截所有的请求 -->  
    <bean class="com.javaee.control.AuthorityInterceptor"/> 
<!--     <mvc:interceptor>  
        定义在这里的拦截器将会拦截特定的请求
        <mvc:mapping path="/user/**"/>  
        <bean class="com.interceptor.LoginInterceptor"/> 
    </mvc:interceptor>   -->
</mvc:interceptors> 

	
	
	
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
		<property name="url" value="jdbc:mysql://localhost:3306/chapter4?useUnicode=true&amp;characterEncoding=UTF-8"></property>	
		<property name="username" value="root"></property>
		<property name="password" value="123456"></property>
	</bean>

	<!-- 配置一个jdbcTemplate模板 使用构造函数注入器 -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate"
		autowire="default">
		<property name="dataSource">
			<ref local="dataSource" />
		</property>
	</bean>

	<!-- 配置一个NamedParameterJdbcTemplate模板 使用构造函数注入器 -->
	<bean id="namedjdbcTemplate"
		class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
		<constructor-arg ref="dataSource" />
	</bean>
	
	<bean id="userRegister" class="com.javaee.dao.impl.UserRegisterImpl">
		<property name="jdbcTemplate" ref="jdbcTemplate"></property>
		<property name="namedjdbcTemplate" ref="namedjdbcTemplate"></property>
	</bean>	
	
</beans>